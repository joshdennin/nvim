-- ~/.config/nvim/init.lua

------------------------------------------------------------------
-- Bootstrap lazy.vim 
------------------------------------------------------------------

local lazypath = vim.fn.stdpath("data") .. "/lazy/lazy.nvim"
if not (vim.uv or vim.loop).fs_stat(lazypath) then
  vim.fn.system({
    "git",
    "clone",
    "--filter=blob:none",
    "https://github.com/folke/lazy.nvim.git",
    "--branch=stable", -- latest stable release
    lazypath,
  })
end
vim.opt.rtp:prepend(lazypath)




------------------------------------------------------------------
-- Setup lazy.vim and load plugins 
------------------------------------------------------------------

require("lazy").setup({
    spec = {
        -- { import = "plugins.options" }, -- nvim expects table not list of options
        {
            "folke/tokyonight.nvim",
            lazy = false,
            priority = 1000,
            opts = {
                style = "night"
            }
        },
        {
            "nvim-lualine/lualine.nvim",
            dependencies = { "nvim-tree/nvim-web-devicons" },

            opts = { 
	    	    options = {
		            component_separators = { left = '', right = '' },
		            section_separators = { left = '', right = '' }, 
	    	    }
            }
        },
        {
            "nvim-tree/nvim-web-devicons",
            lazy = true,
        },
        {
            "nvim-treesitter/nvim-treesitter",
            branch = "master",
            lazy = false,
            build = ":TSUpdate",
            dependencies = {
                "OXY2DEV/markview.nvim"
            }
        },
        {
            "folke/which-key.nvim",
            event = "VeryLazy",
                opts = {
                },
                keys = {
                    {
                    "<leader>?",
                    function()
                        require("which-key").show({ global = false })
                    end,
                    desc = "Buffer Local Keymaps (which-key)",
                    },
              },
        },
        { 
            "echasnovski/mini.nvim", 
            version = false 
        },
        {
            "mbbill/undotree",
            lazy = true,
        },
    },
    install = { colorscheme = { "tokyonight" } },
    checker = { enabled = true },
})

------------------------------------------------------------------
-- Customizations (continued in ./lua/options/options.lua
------------------------------------------------------------------
require("lualine").setup()

local set = vim.opt

vim.g.mapleader = " "
vim.g.maplocalleader = "\\"

-- Style
vim.cmd.colorscheme("tokyonight")

-- Basic Settings
set.number = true
set.relativenumber = true
set.cursorline = true
set.wrap = false
set.scrolloff = 10
set.sidescrolloff = 8

-- Indentation
set.tabstop = 4
set.shiftwidth = 4
set.softtabstop = 4
set.expandtab = true
set.autoindent = true

-- Visual settings
vim.opt.termguicolors = true                       -- Enable 24-bit colors
vim.opt.signcolumn = "yes"                         -- Always show sign column
vim.opt.colorcolumn = "100"                        -- Show column at 100 characters
vim.cmd([[
    highlight ColorColumn guibg=#394b70 
    ]]) -- guifg=#1a1b26 
vim.opt.showmatch = true                           -- Highlight matching brackets
--vim.opt.matchtime = 2                              -- How long to show matching bracket
vim.opt.cmdheight = 1                              -- Command line height
vim.opt.completeopt = "menuone,noinsert,noselect"  -- Completion options 
vim.opt.showmode = false                           -- Don't show mode in command line 
vim.opt.pumheight = 10                             -- Popup menu height 
vim.opt.pumblend = 10                              -- Popup menu transparency 
vim.opt.winblend = 0                               -- Floating window transparency 
vim.opt.conceallevel = 0                           -- Don't hide markup 
vim.opt.concealcursor = ""                         -- Don't hide cursor line markup 
-- vim.opt.lazyredraw = true                          -- Don't redraw during macros
vim.opt.synmaxcol = 300                            -- Syntax highlighting limit 
